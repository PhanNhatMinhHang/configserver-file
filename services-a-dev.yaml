server:
  port: 8081

spring:
  zipkin:
    baseURL: http://localhost:9411/
  sleuth:
    sampler:
      percentage: 1
  cloud:
    loadbalancer:
      ribbon:
        enabled: false

logging:
  level:
    root: "DEBUG"

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      services-b:
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 5
        ringBufferSizeInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
          - java.lang.IllegalStateException
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      services-b:
        limitForPeriod: 5
        limitRefreshPeriod: 5000
        timeoutDuration: 1000ms
  retry:
    instances:
      retryServices-b:
        maxRetryAttempts: 5
        waitDuration: 10000
        retry-exceptions:
          - java.util.concurrent.TimeoutException
          - java.lang.IllegalStateException
  bulkhead:
    instances:
      bulkheadServices-b:
        maxWaitDuration: 2ms
        maxConcurrentCalls: 20
  thread-pool-bulkhead:
    instances:
      bulkheadServices-b:
        maxThreadPoolSize: 1
        coreThreadPoolSize: 1
        queueCapacity: 1

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8888/eureka/

management:
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

